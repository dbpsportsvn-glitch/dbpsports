## Tổng hợp Dự án: DBP Sports (Cập nhật ngày 28/08/2025)
Đây là bản tóm tắt luồng công việc và các thành phần chính của dự án website quản lý giải đấu bóng đá dbpsports.

1. Môi trường & Cài đặt ban đầu
Công cụ: Đã cài đặt thành công Python, Visual Studio Code, và Git.

Cấu trúc dự án: Tạo cấu trúc thư mục gốc dbpsports chứa backend và frontend.

Môi trường ảo (venv): Đã tạo và sử dụng venv bên trong thư mục backend để quản lý các thư viện.

2. Xây dựng Lõi Backend với Django
Django Project & Apps:

Khởi tạo Project dbpsports_core chứa các file cấu hình chung.

Tạo ra hai App riêng biệt: tournaments (quản lý giải đấu) và users (quản lý người dùng).

Luồng hoạt động (URL, View, Template):

Nắm vững quy trình cơ bản: Một URL gọi đến một hàm View, hàm View xử lý logic và trả về một Template (file .html).

3. Quản lý Cơ sở dữ liệu & Models
Models:

Định nghĩa các "bản thiết kế" cho Tournament (Giải đấu), Team (Đội bóng, có logo), Player (Cầu thủ), Match (Trận đấu), và Lineup (Đội hình thi đấu).

Thiết lập các mối quan hệ logic: Một giải đấu có nhiều đội, một đội có nhiều cầu thủ, một trận đấu có hai đội, một đội hình kết nối cầu thủ và trận đấu.

Migrations:

Thực hiện thành công quy trình makemigrations và migrate mỗi khi thay đổi Models để cập nhật cơ sở dữ liệu.

Trang Quản trị (Admin):

Tạo superuser và đăng ký tất cả các Model vào trang Admin.

Nâng cấp toàn diện giao diện Admin bằng thư viện django-jazzmin, giúp giao diện hiện đại, dễ sử dụng và được Việt hóa.

Tùy chỉnh hiển thị (list_display, search_fields, list_filter) để quản lý dữ liệu hiệu quả hơn.

4. Giao diện & Trải nghiệm Người dùng (Frontend)
Template kế thừa: Tạo ra một file base.html chung làm khung sườn cho toàn bộ trang web.

Bootstrap & CSS tùy chỉnh: Tích hợp thành công Bootstrap và viết file custom.css để có giao diện chuyên nghiệp, bao gồm:

Trang chủ với Hero Section (banner lớn) và danh sách giải đấu dạng Card.

Các form đăng ký, đăng nhập được đặt trong "hộp" gọn gàng.

Trang chi tiết trận đấu được thiết kế theo phong cách bảng tỉ số (scoreboard) hiện đại.

Static & Media Files: Cấu hình thành công STATICFILES_DIRS và MEDIA_ROOT để Django có thể xử lý các file CSS, ảnh logo...

Việt hóa (Localization): Chuyển ngôn ngữ và múi giờ mặc định của Django sang tiếng Việt.

5. Tính năng Tương tác & Phân quyền
Hệ thống Người dùng: Hoàn thiện luồng Đăng ký, Đăng nhập, Đăng xuất.

Quản lý Đội bóng (CRUD):

Người dùng đã đăng nhập có thể tạo đội để đăng ký tham gia giải đấu.

Đội trưởng có thể sửa thông tin đội của mình và tải lên logo.

Quản lý Cầu thủ (CRUD):

Đội trưởng có thể thêm, sửa, và xóa cầu thủ khỏi đội hình của mình.

Đăng ký Đội hình Thi đấu:

Đội trưởng có thể truy cập một trang riêng để chọn cầu thủ đá chính và dự bị cho một trận đấu cụ thể.

Logic Phân quyền:

Các chức năng quan trọng (tạo đội, quản lý đội hình...) chỉ hiển thị khi người dùng đã đăng nhập và có đúng vai trò (là đội trưởng của đội đó).

Nút "In thông tin" chỉ hiển thị cho Admin hoặc các tài khoản được cấp quyền.

6. Quản lý Phiên bản (Backup)
Git: Đã sử dụng Git một cách nhất quán để tạo các "Save Point" (commit) sau mỗi lần hoàn thành một tính năng lớn, đảm bảo an toàn cho dự án.